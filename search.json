[{"path":"https://feitony.github.io/scDesign3/articles/scDesign3.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"scDesign3 Quickstart","text":"scDesign3 unified probabilistic framework generates realistic silico high-dimensional single-cell omics data various cell states, including discrete cell types, continuous trajectories, spatial locations learning real datasets. Since functions scDesign3 comprehensive, introduce scDesign3 simulates scRNA-seq dataset one continuous developmental trajectory. information, please check Articles website: (https://songdongyuan1994.github.io/scDesign3/docs/index.html).","code":""},{"path":"https://feitony.github.io/scDesign3/articles/scDesign3.html","id":"read-in-the-reference-data","dir":"Articles","previous_headings":"","what":"Read in the reference data","title":"scDesign3 Quickstart","text":"raw data scvelo, describes pancreatic endocrinogenesis. pre-select top 1000 highly variable genes filter cell types ensure single trajectory. save computational time, use top 100 genes.","code":"example_sce <- readRDS((url(\"https://figshare.com/ndownloader/files/40581992\"))) print(example_sce) #> class: SingleCellExperiment  #> dim: 1000 2087  #> metadata(5): clusters_coarse_colors clusters_colors day_colors #>   neighbors pca #> assays(6): X spliced ... cpm logcounts #> rownames(1000): Pyy Iapp ... Eya2 Kif21a #> rowData names(1): highly_variable_genes #> colnames(2087): AAACCTGAGAGGGATA AAACCTGGTAAGTGGC ... TTTGTCAAGTGACATA #>   TTTGTCAAGTGTGGCA #> colData names(7): clusters_coarse clusters ... sizeFactor pseudotime #> reducedDimNames(4): X_pca X_umap PCA UMAP #> mainExpName: NULL #> altExpNames(0): example_sce <- example_sce[1:100, ]"},{"path":"https://feitony.github.io/scDesign3/articles/scDesign3.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"scDesign3 Quickstart","text":"function scdesign3() takes SinglecellExperiment object cell covariates (cell types, pseudotime, spatial coordinates) stored colData SinglecellExperiment object. output scdesign3() list includes: new_count: synthetic count matrix generated scdesign3(). parameter ncell set number different number cells input data, matrix new cell covariates used generating new data. parameter ncell default value, NULL. model_aic: vector include genes’ marginal models’ AIC, fitted copula’s AIC, total AIC, sum previous two AIC. model_bic: vector include genes’ marginal models’ BIC, fitted copula’s BIC, total BIC, sum previous two BIC. parameter return_model set TRUE, list contains fitted gam gamlss model genes input data. parameter return_model set default value FALSE, NULL. parameter return_model set TRUE, list contains either correlation matrix (copula = \"gaussian\") fitted vine copula (copula = \"vine) user specified correlation groups (based parameter corr_by). parameter return_model set default value FALSE, NULL. example, since change parameter ncell, synthetic count matrix dimension input count matrix. , can create SinglecellExperiment object using synthetic count matrix store logcounts input synthetic SinglecellExperiment objects.","code":"set.seed(123) example_simu <- scdesign3(     sce = example_sce,     assay_use = \"counts\",     celltype = \"cell_type\",     pseudotime = \"pseudotime\",     spatial = NULL,     other_covariates = NULL,     mu_formula = \"s(pseudotime, k = 10, bs = 'cr')\",     sigma_formula = \"1\", # If you want your dispersion also varies along pseudotime, use \"s(pseudotime, k = 5, bs = 'cr')\"     family_use = \"nb\",     n_cores = 2,     usebam = FALSE,     corr_formula = \"1\",     copula = \"gaussian\",     DT = TRUE,     pseudo_obs = FALSE,     return_model = FALSE,     nonzerovar = FALSE   ) dim(example_simu$new_count) #> [1]  100 2087 logcounts(example_sce) <- log1p(counts(example_sce)) simu_sce <- SingleCellExperiment(list(counts = example_simu$new_count), colData = example_simu$new_covariate) logcounts(simu_sce) <- log1p(counts(simu_sce))"},{"path":"https://feitony.github.io/scDesign3/articles/scDesign3.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"scDesign3 Quickstart","text":"","code":"set.seed(123) compare_figure <- plot_reduceddim(ref_sce = example_sce,                                    sce_list = list(simu_sce),                                    name_vec = c(\"Reference\", \"scDesign3\"),                                   assay_use = \"logcounts\",                                    if_plot = TRUE,                                    color_by = \"pseudotime\",                                    n_pc = 20) plot(compare_figure$p_umap)"},{"path":"https://feitony.github.io/scDesign3/articles/scDesign3.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"scDesign3 Quickstart","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] ggplot2_3.5.1               SingleCellExperiment_1.28.1 #>  [3] SummarizedExperiment_1.36.0 Biobase_2.66.0              #>  [5] GenomicRanges_1.58.0        GenomeInfoDb_1.42.1         #>  [7] IRanges_2.40.1              S4Vectors_0.44.0            #>  [9] BiocGenerics_0.52.0         MatrixGenerics_1.18.1       #> [11] matrixStats_1.5.0           scDesign3_1.1.4             #> [13] BiocStyle_2.34.0            #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6            xfun_0.50               bslib_0.8.0             #>  [4] lattice_0.22-6          gamlss_5.4-22           vctrs_0.6.5             #>  [7] tools_4.4.2             generics_0.1.3          parallel_4.4.2          #> [10] tibble_3.2.1            pkgconfig_2.0.3         Matrix_1.7-1            #> [13] desc_1.4.3              lifecycle_1.0.4         GenomeInfoDbData_1.2.13 #> [16] farver_2.1.2            compiler_4.4.2          textshaping_1.0.0       #> [19] munsell_0.5.1           htmltools_0.5.8.1       sass_0.4.9              #> [22] yaml_2.3.10             pillar_1.10.1           pkgdown_2.1.1           #> [25] crayon_1.5.3            jquerylib_0.1.4         MASS_7.3-61             #> [28] openssl_2.3.1           cachem_1.1.0            DelayedArray_0.32.0     #> [31] viridis_0.6.5           abind_1.4-8             mclust_6.1.1            #> [34] RSpectra_0.16-2         nlme_3.1-166            tidyselect_1.2.1        #> [37] digest_0.6.37           mvtnorm_1.3-3           dplyr_1.1.4             #> [40] bookdown_0.42           labeling_0.4.3          splines_4.4.2           #> [43] gamlss.dist_6.1-1       fastmap_1.2.0           grid_4.4.2              #> [46] gamlss.data_6.0-6       colorspace_2.1-1        cli_3.6.3               #> [49] SparseArray_1.6.1       magrittr_2.0.3          S4Arrays_1.6.0          #> [52] survival_3.7-0          withr_3.0.2             scales_1.3.0            #> [55] UCSC.utils_1.2.0        rmarkdown_2.29          XVector_0.46.0          #> [58] httr_1.4.7              umap_0.2.10.0           gridExtra_2.3           #> [61] reticulate_1.40.0       png_0.1-8               askpass_1.2.1           #> [64] ragg_1.3.3              evaluate_1.0.3          knitr_1.49              #> [67] viridisLite_0.4.2       irlba_2.3.5.1           mgcv_1.9-1              #> [70] rlang_1.1.5             Rcpp_1.0.14             glue_1.8.0              #> [73] BiocManager_1.30.25     jsonlite_1.8.9          R6_2.5.1                #> [76] systemfonts_1.2.1       fs_1.6.5                zlibbioc_1.52.0"},{"path":"https://feitony.github.io/scDesign3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dongyuan Song. Author, maintainer. Qingyang Wang. Author. Chenxin Jiang. Author.","code":""},{"path":"https://feitony.github.io/scDesign3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Song, Dongyuan, Wang, Qingyang, Yan, Guanao, Liu, Tianyang, Sun, Tianyi, Li, Jessica J (2023). “scDesign3 generates realistic silico data multimodal single-cell spatial omics.” Nature Biotechnology. doi:10.1038/s41587-023-01772-1.","code":"@Article{,   title = {scDesign3 generates realistic in silico data for multimodal single-cell and spatial omics},   author = {{Song} and {Dongyuan} and {Wang} and {Qingyang} and {Yan} and {Guanao} and {Liu} and {Tianyang} and {Sun} and {Tianyi} and {Li} and Jingyi Jessica},   journal = {Nature Biotechnology},   year = {2023},   publisher = {Nature Publishing Group US New York},   doi = {10.1038/s41587-023-01772-1}, }"},{"path":"https://feitony.github.io/scDesign3/index.html","id":"scdesign3","dir":"","previous_headings":"","what":"scDesign3","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"R package scDesign3 --one single-cell data simulation tool using reference datasets different cell states (cell types, trajectories spatial coordinates), different modalities (gene expression, chromatin accessibility, protein abundance, DNA methylation, etc), complex experimental designs. transparent parameters enable users alter models needed; model evaluation metrics (AIC, BIC) convenient visualization function help users select models.  Detailed tutorials illustrate various functionalities scDesign3 available website. following illustration figure summarizes usage scDesign3:  find details scDesign3, can check manuscript Nature Biotechnology: Song, D., Wang, Q., Yan, G. et al. scDesign3 generates realistic silico data multimodal single-cell spatial omics. Nat Biotechnol 42, 247–252 (2024). computational time quadratic number features used copula modeling. Reducing number greatly speed calculation. Please note parallel computing scDesign3 mainly designed UNIX OS; careful set n_cores. Please note consider balance n_cores ROM (memory). Simply increasing number cores without increase memory slow froze program. recommend allocate least 1 GB 1 core.","code":""},{"path":"https://feitony.github.io/scDesign3/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"Installation Quick Start Tutorials Contact Related Manuscripts","code":""},{"path":"https://feitony.github.io/scDesign3/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"install development version GitHub, please run: now working submitting Bioconductor provide link online.","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\") devtools::install_github(\"SONGDONGYUAN1994/scDesign3\")"},{"path":"https://feitony.github.io/scDesign3/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"following code quick example running simulator. function scdesign3() takes SinglecellExperiment object cell covariates(cell types, pseudotime, spatial coordinates) stored colData SinglecellExperiment object. details SinlgeCellExperiment object, please check Bioconductor link. parameters scdesign3() : sce: SingleCellExperiment object. assay_use: string indicates assay use sce. Default ‘counts’. celltype: string column name cell type variable colData sce. Default ‘cell_type’. cell type variable colData sce factor variable. Use NULL column colData contains cell-type information. pseudotime: string string vector name pseudotime (exist) multiple lineages. Default NULL. data one lineage, parameter column name pseudotime variable colData sce. data multiple lingaes, parameter column names pseudotime variables lineage variables indicating lineage cell belongs . pseudotime variables continuous numeric variables. spatial: length-two string vector column names spatial coordinates colData sce. Default NULL. other_covariate: string string vector covariates colData sce want include data. example, can put column names batch variables /condition variables colData sce sce contains information want include variables inmu_formula sigma_formula corr_formula. mu_formula: string mu parameter formula fitting gene’s marginal distribution. sigma_formula: string sigma parameter formula fitting gene’s marginal distribution. family_use: string marginal distribution want use fitting gene’s marginal distribution. Must one ‘poisson’, ‘nb’, ‘zip’, ‘zinb’ ‘gaussian’. n_cores: integer. number cores use. correlation_function: string. ‘default’, function Rfast; ‘coop’, function coop, calls BLAS. usebam: logic variable. TRUE, use bam (generalized additive models large datasets) acceleration. edf_flexible: logic variable. TRUE, degree freedom gene’s regression model automatically selected acceleration. corr_formula: string correlation structure. example, want obtain correlation structure cell type, parameter column name cell type variable colData sce. copula: string copula choice. Must one ‘gaussian’ ‘vine’. Default ‘gaussian’. Note vine copula may better modeling high-dimensions, can slow features >1000. fastmvn: logical variable. TRUE, sampling multivariate Gaussian done mvnfast, otherwise mvtnorm. Default FALSE. matters Gaussian copula. DT: logic variable. TRUE, perform distributional transformation make discrete data ‘continuous’. useful discrete distributions (e.g., Poisson, NB). Default TRUE. Note continuous data (e.g., Gaussian), DT make sense set FALSE. pseudo_obs: logic variable. TRUE, use empirical quantiles instead theoretical quantiles fitting copula. Default FALSE. family_set: string string vector bivariate copula families. Default c(“gauss”, “indep”). important_feature: string vector indicates whether gene used correlation estimation . string, string must “” “auto”, indicates genes used genes automatically selected based proportion zero expression across cells gene. Gene zero proportion greater 0.8 excluded form gene-gene correlation estimation. vector, logical vector length equal number genes sce. TRUE logical vector means corresponding gene included gene-gene correlation estimation FALSE logical vector means corresponding gene excluded gene-gene correlation estimation. default value “”. nonnegative: logical variable. TRUE, values < 0 synthetic data converted 0. Default TRUE (since expression matrix nonnegative). return_model: logic variable. TRUE, marginal models copula models returned. Default FALSE. nonzerovar: logical variable. TRUE, gene zero variance, cell replaced 1. designed avoiding potential errors, example, PCA. parallelization: string indicating specific parallelization function use. Must one ‘mcmapply’, ‘bpmapply’, ‘pbmcmapply’, corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value ‘mcmapply’. BPPARAM: MulticoreParam object NULL. parameter parallelization = ‘mcmapply’ ‘pbmcmapply’, parameter must NULL. parameter parallelization = ‘bpmapply’, parameter must one MulticoreParam object offered package ’BiocParallel. default value NULL. TRACE: logic variable. TRUE, warning/error log runtime gam/gamlss returned, FALSE otherwise. Default FALSE. output scdesign3() list includes: new_count: synthetic count matrix generated scdesign3(). parameter ncell set number different number cells input data, matrix new cell covariates used generating new data. parameter ncell default value, NULL. model_aic: vector include genes’ marginal models’ AIC, fitted copula’s AIC, total AIC, sum previous two. model_bic: vector include genes’ marginal models’ BIC, fitted copula’s BIC, total BIC, sum previous two. parameter return_model set TRUE, list contains fitted gam gamlss model genes input data. may greatly increase object size. parameter return_model set default value FALSE, NULL. parameter return_model set TRUE, list contains either correlation matrix (copula = \"gaussian\") fitted Vine copula (copula = \"vine\") user specified correlation groups (based parameter corr_by). parameter return_model set default value FALSE, NULL. details mu_formula sigma_formula formula specification, please check online materials package mgcv. Technically speaking, can try formulas long available mgcv.","code":"example_simu <- scdesign3(     sce = example_sce,     assay_use = \"counts\",     celltype = \"cell_type\",     pseudotime = \"pseudotime\",     spatial = NULL,     other_covariates = NULL,     mu_formula = \"s(pseudotime, k = 10, bs = 'cr')\",     sigma_formula = \"s(pseudotime, k = 5, bs = 'cr')\",     family_use = \"nb\",     n_cores = 2,     correlation_function = \"default\",     usebam = FALSE,     corr_formula = \"1\",     copula = \"gaussian\",     fastmvn = FALSE,     DT = TRUE,     pseudo_obs = FALSE,     family_set = c(\"gauss\", \"indep\"),     important_feature = \"all\",     nonnegative = TRUE,     return_model = FALSE,     nonzerovar = FALSE,     parallelization = \"mcmapply\",     BPPARAM = NULL,     trace = FALSE   )"},{"path":"https://feitony.github.io/scDesign3/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"detailed tutorials, please check website. tutorials demonstrate applications scDesign3 following four perspectives: data simulation, model parameters, model selection, model alteration. Simulate datasets cell type modified cell-type proportions Simulate datasets cell library size Simulate datasets multiple lineages Simulate spatial transcriptomic data Simulate spot-resolution spatial data cell-type deconvolution Simulate single-cell ATAC-seq data Simulate CITE-seq data Simulate multi-omics data multiple single-omic datasets scDesign3 introduction scDesign3 marginal distribution genes Compare Gaussian copula Vine copula Parallelization scDesign3 Evaluate clustering goodness--fit scDesign3 Evaluate pseudotime goodness--fit scDesign3 Simulate datasets /without batch effect Simulate datasets /without condition effect Simulate datasets DE test","code":""},{"path":"https://feitony.github.io/scDesign3/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"questions suggestions scDesign3 welcomed! Please report issues, contact Dongyuan Song (dongyuansong@ucla.edu) Qingyang Wang (qw802@g.ucla.edu).","code":""},{"path":"https://feitony.github.io/scDesign3/index.html","id":"changelog","dir":"","previous_headings":"","what":"Changelog","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"Add options correlation estimation. alternative R package coop, requires BLAS Add sparse Gaussian copula fit_copula Add automatic k selection fit_marginal","code":""},{"path":"https://feitony.github.io/scDesign3/index.html","id":"related-manuscripts","dir":"","previous_headings":"","what":"Related Manuscripts","title":"A unified framework of realistic in silico data generation and statistical model inference for single-cell and spatial omics","text":"scDesign3: Song, D., Wang, Q., Yan, G. et al. scDesign3 generates realistic silico data multimodal single-cell spatial omics. Nat Biotechnol 42, 247–252 (2024). scDesign: Li, W. V., & Li, J. J. (2019). statistical simulator scDesign rational scRNA-seq experimental design. Bioinformatics, 35(14), i41-i50. scDesign2: Sun, T., Song, D., Li, W. V., & Li, J. J. (2021). scDesign2: transparent simulator generates high-fidelity single-cell gene expression count data gene correlations captured. Genome biology, 22(1), 1-37. scReadSim: Yan, G., Song, D. & Li, J.J. scReadSim: single-cell RNA-seq ATAC-seq read simulator. Nat Commun 14, 7482 (2023)","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ba.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions from gamlss/gamlss.add with bugs fixed — ba","title":"Functions from gamlss/gamlss.add with bugs fixed — ba","text":"additive function used fitting GAMLSS models. interface bam() mgcv package.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions from gamlss/gamlss.add with bugs fixed — ba","text":"","code":"ba(formula, control = ba.control(...), ...)"},{"path":"https://feitony.github.io/scDesign3/reference/ba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions from gamlss/gamlss.add with bugs fixed — ba","text":"formula formula model. control control model fitting. ... arguments.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions from gamlss/gamlss.add with bugs fixed — ba","text":"xvar list.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ba.html","id":"ba","dir":"Reference","previous_headings":"","what":"ba","title":"Functions from gamlss/gamlss.add with bugs fixed — ba","text":"NA","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions from gamlss/gamlss.add with bugs fixed — ba","text":"","code":"print(\"No example\") #> [1] \"No example\""},{"path":"https://feitony.github.io/scDesign3/reference/construct_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the input data (covariate matrix and expression matrix) — construct_data","title":"Construct the input data (covariate matrix and expression matrix) — construct_data","text":"function constructs input data fit_marginal.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/construct_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the input data (covariate matrix and expression matrix) — construct_data","text":"","code":"construct_data(   sce,   assay_use = \"counts\",   celltype,   pseudotime,   spatial,   other_covariates,   ncell = dim(sce)[2],   corr_by,   parallelization = \"mcmapply\",   BPPARAM = NULL )"},{"path":"https://feitony.github.io/scDesign3/reference/construct_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the input data (covariate matrix and expression matrix) — construct_data","text":"sce SingleCellExperiment object. assay_use string indicates assay use sce. Default 'counts'. celltype string name cell type variable colData sce. Default 'cell_type'. pseudotime string string vector name pseudotime (exist) multiple lineages. Default NULL. spatial length two string vector names spatial coordinates. Default NULL. other_covariates string string vector covariates want include data. ncell number cell want simulate. Default dim(sce)[2] (number input data). arbitrary number provided, function use Vine Copula simulate new covariate matrix. corr_by string string vector indicates groups correlation structure. '1', cells one estimated corr. 'ind', corr (features independent). others, variable decides corr structures. parallelization string indicating specific parallelization function use. Must one 'mcmapply', 'bpmapply', 'pbmcmapply', corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value 'mcmapply'. BPPARAM MulticoreParam object NULL. parameter parallelization = 'mcmapply' 'pbmcmapply', parameter must NULL. parameter parallelization = 'bpmapply',  parameter must one MulticoreParam object offered package 'BiocParallel. default value NULL.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/construct_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the input data (covariate matrix and expression matrix) — construct_data","text":"list components: count_mat expression matrix dat original covariate matrix newCovariate simulated new covariate matrix, NULL parameter ncell default filtered_gene genes excluded marginal copula fitting steps genes express less two cells.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/construct_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct the input data (covariate matrix and expression matrix) — construct_data","text":"function takes SingleCellExperiment object input. Based users' choice, constructs matrix covariates (explanatory variables) expression matrix (e.g., count matrix scRNA-seq).","code":""},{"path":"https://feitony.github.io/scDesign3/reference/construct_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the input data (covariate matrix and expression matrix) — construct_data","text":"","code":"data(example_sce)   my_data <- construct_data(   sce = example_sce,   assay_use = \"counts\",   celltype = \"cell_type\",   pseudotime = \"pseudotime\",   spatial = NULL,   other_covariates = NULL,   corr_by = \"1\"   ) #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, saveRDS, setdiff, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians"},{"path":"https://feitony.github.io/scDesign3/reference/example_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"A SingleCellExperiment object containing both cell type and pseudotime — example_sce","title":"A SingleCellExperiment object containing both cell type and pseudotime — example_sce","text":"SingleCellExperiment object containing cell type pseudotime","code":""},{"path":"https://feitony.github.io/scDesign3/reference/example_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A SingleCellExperiment object containing both cell type and pseudotime — example_sce","text":"","code":"data(\"example_sce\")"},{"path":"https://feitony.github.io/scDesign3/reference/example_sce.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A SingleCellExperiment object containing both cell type and pseudotime — example_sce","text":"dataset 10 rows (genes) 1289 cols (cells)","code":""},{"path":"https://feitony.github.io/scDesign3/reference/example_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A SingleCellExperiment object containing both cell type and pseudotime — example_sce","text":"corresponding SingleCellExperiment object","code":""},{"path":"https://feitony.github.io/scDesign3/reference/extract_para.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the parameters of each cell's distribution — extract_para","title":"Extract the parameters of each cell's distribution — extract_para","text":"extract_para generates parameter matrices determine cell's distribution","code":""},{"path":"https://feitony.github.io/scDesign3/reference/extract_para.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the parameters of each cell's distribution — extract_para","text":"","code":"extract_para(   sce,   assay_use = \"counts\",   marginal_list,   n_cores,   family_use,   new_covariate,   parallelization = \"mcmapply\",   BPPARAM = NULL,   data )"},{"path":"https://feitony.github.io/scDesign3/reference/extract_para.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the parameters of each cell's distribution — extract_para","text":"sce SingleCellExperiment object. assay_use string indicates assay use sce. Default 'counts'. marginal_list list fitted regression models fit_marginal gene sce. n_cores integer. number cores use. family_use string marginal distribution. Must one 'poisson', 'nb', 'zip', 'zinb' 'gaussian', represent 'poisson distribution', 'negative binomial distribution', 'zero-inflated poisson distribution', 'zero-inflated negative binomial distribution', 'gaussian distribution' respectively. new_covariate data.frame contains covariates targeted simulated data  construct_data correlation group assignment cell column 'corr_group'. parallelization string indicating specific parallelization function use. Must one 'mcmapply', 'bpmapply', 'pbmcmapply', corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value 'mcmapply'. BPPARAM MulticoreParam object NULL. parameter parallelization = 'mcmapply' 'pbmcmapply', parameter must NULL. parameter parallelization = 'bpmapply',  parameter must one MulticoreParam object offered package 'BiocParallel. default value NULL. data dataframe used fitting gamlss model","code":""},{"path":"https://feitony.github.io/scDesign3/reference/extract_para.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the parameters of each cell's distribution — extract_para","text":"list components: mean_mat cell feature matrix mean parameter. sigma_mat cell feature matrix sigma parameter (Gaussian, variance; NB, dispersion.). zero_mat cell feature matrix zero-inflation parameter (non-zero ZIP ZINB).","code":""},{"path":"https://feitony.github.io/scDesign3/reference/extract_para.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the parameters of each cell's distribution — extract_para","text":"function takes new covariate (use) construct_data marginal models fit_marginal.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/extract_para.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the parameters of each cell's distribution — extract_para","text":"","code":"data(example_sce)   my_data <- construct_data(   sce = example_sce,   assay_use = \"counts\",   celltype = \"cell_type\",   pseudotime = \"pseudotime\",   spatial = NULL,   other_covariates = NULL,   corr_by = \"1\"   )   my_marginal <- fit_marginal(   data = my_data,   mu_formula = \"s(pseudotime, bs = 'cr', k = 10)\",   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 1,   usebam = FALSE   )   my_copula <- fit_copula(   sce = example_sce,   assay_use = \"counts\",   marginal_list = my_marginal,   family_use = c(rep(\"nb\", 5), rep(\"zip\", 5)),   copula = \"vine\",   n_cores = 1,   input_data = my_data$dat   ) #> Convert Residuals to Uniform #> Converting End #> Copula group 1 starts #> Vine Copula Estimation Starts #> Time difference of 0.2085001 secs #> Vine Copula Estimation Ends   my_para <- extract_para(     sce = example_sce,     marginal_list = my_marginal,     n_cores = 1,     family_use = c(rep(\"nb\", 5), rep(\"zip\", 5)),     new_covariate = my_data$new_covariate,     data = my_data$dat   )"},{"path":"https://feitony.github.io/scDesign3/reference/fit_copula.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the copula model — fit_copula","title":"Fit the copula model — fit_copula","text":"fit_copula fits copula model.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the copula model — fit_copula","text":"","code":"fit_copula(   sce,   assay_use,   input_data,   empirical_quantile = FALSE,   marginal_list,   family_use,   copula = \"gaussian\",   DT = TRUE,   pseudo_obs = FALSE,   epsilon = 1e-06,   family_set = c(\"gaussian\", \"indep\"),   important_feature = \"all\",   if_sparse = FALSE,   correlation_function = \"default\",   n_cores,   parallelization = \"mcmapply\",   BPPARAM = NULL )"},{"path":"https://feitony.github.io/scDesign3/reference/fit_copula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the copula model — fit_copula","text":"sce SingleCellExperiment object. assay_use string indicates assay use sce. Default 'counts'. input_data input data, one output construct_data. empirical_quantile Please use clearly know happen! logic variable. TRUE, fit copula use EMPIRICAL CDF values original data; make simulated data fixed (randomness). Default FALSE. works ncell original data. marginal_list list fitted regression models fit_marginal. family_use string vector strings marginal distribution. Must one 'poisson', 'nb', 'zip', 'zinb' 'gaussian'. copula string copula choice. Must one 'gaussian' 'vine'. Default 'gaussian'. Note vine copula may better modeling high-dimensions, can slow features >1000. DT logic variable. TRUE, perform distributional transformation make discrete data 'continuous'. useful discrete distributions (e.g., Poisson, NB). Default TRUE. Note continuous data (e.g., Gaussian), DT make sense set FALSE. pseudo_obs logic variable. TRUE, use empirical quantiles instead theoretical quantiles fitting copula. Default FALSE. epsilon numeric variable preventing transformed quantiles collapse 0 1. family_set string string vector bivariate copula families. Default c(\"gaussian\", \"indep\"). important_feature numeric value vector indicates whether gene used correlation estimation . numeric value, gene zero proportion greater value excluded form gene-gene correlation estimation. vector, logical vector length equal number genes sce. TRUE logical vector means corresponding gene included gene-gene correlation estimation FALSE logical vector means corresponding gene excluded gene-gene correlation estimation. default value \"\" (special string means filtering). if_sparse logic variable. works Gaussian copula (family_set = \"gaussian\"). TRUE, thresholding strategy make corr matrix sparse. correlation_function string. 'default', function Rfast; 'coop', function coop, calls BLAS. n_cores integer. number cores use. parallelization string indicating specific parallelization function use. Must one 'mcmapply', 'bpmapply', 'pbmcmapply', corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value 'mcmapply'. BPPARAM MulticoreParam object NULL. parameter parallelization = 'mcmapply' 'pbmcmapply', parameter must NULL. parameter parallelization = 'bpmapply',  parameter must one MulticoreParam object offered package 'BiocParallel. default value NULL.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_copula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the copula model — fit_copula","text":"list components: new_mvu matrix new multivariate uniform distribution copula. copula_list list fitted copula model. using Gaussian copula, list correlation matrices; vine, list vine objects. model_aic vector marginal AIC copula AIC. model_bic vector marginal BIC copula BIC.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_copula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit the copula model — fit_copula","text":"function takes result fit_marginal input fit copula model residuals.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_copula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the copula model — fit_copula","text":"","code":"data(example_sce)   my_data <- construct_data(   sce = example_sce,   assay_use = \"counts\",   celltype = \"cell_type\",   pseudotime = \"pseudotime\",   spatial = NULL,   other_covariates = NULL,   corr_by = \"1\"   )   my_marginal <- fit_marginal(   data = my_data,   mu_formula = \"s(pseudotime, bs = 'cr', k = 10)\",   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 1,   usebam = FALSE   )   my_copula <- fit_copula(   sce = example_sce,   assay_use = \"counts\",   marginal_list = my_marginal,   family_use = c(rep(\"nb\", 5), rep(\"zip\", 5)),   copula = \"vine\",   n_cores = 1,   input_data = my_data$dat   ) #> Convert Residuals to Uniform #> Converting End #> Copula group 1 starts #> Vine Copula Estimation Starts #> Time difference of 0.1357558 secs #> Vine Copula Estimation Ends"},{"path":"https://feitony.github.io/scDesign3/reference/fit_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the marginal models — fit_marginal","title":"Fit the marginal models — fit_marginal","text":"fit_marginal fits per-feature regression models.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the marginal models — fit_marginal","text":"","code":"fit_marginal(   data,   predictor = \"gene\",   mu_formula,   sigma_formula,   family_use,   n_cores,   usebam = FALSE,   edf_flexible = FALSE,   parallelization = \"mcmapply\",   BPPARAM = NULL,   trace = FALSE,   simplify = FALSE,   filter_cells = FALSE )"},{"path":"https://feitony.github.io/scDesign3/reference/fit_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the marginal models — fit_marginal","text":"data object construct_data. predictor string predictor gam/gamlss model. Default \"gene\". just name. mu_formula string mu parameter formula. follows format formula bam. Note: formula multiple smoothers (s()) (recommend ), please put one largest k (complex one) first one. sigma_formula string sigma parameter formula family_use string vector strings marginal distribution. Must one 'binomial', 'poisson', 'nb', 'zip', 'zinb' 'gaussian', represent 'poisson distribution', 'negative binomial distribution', 'zero-inflated poisson distribution', 'zero-inflated negative binomial distribution', 'gaussian distribution' respectively. n_cores integer. number cores use. usebam logic variable. use bam acceleration. edf_flexible logic variable. uses simpler model accelerate marginal fitting mild loss accuracy. TRUE, fitted regression model use fitted relationship Gini coefficient effective degrees freedom random selected gene sets. Default FALSE. parallelization string indicating specific parallelization function use. Must one 'mcmapply', 'bpmapply', 'pbmcmapply', corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value 'mcmapply'. BPPARAM MulticoreParam object NULL. parameter parallelization = 'mcmapply' 'pbmcmapply', parameter must NULL. parameter parallelization = 'bpmapply',  parameter must one MulticoreParam object offered package 'BiocParallel. default value NULL. trace logic variable. TRUE, warning/error log runtime gam/gamlss returned. returned, FALSE otherwise. Default FALSE. simplify logic variable. TRUE, fitted regression model keep essential contains predict. Default FALSE. filter_cells logic variable. TRUE, covariates used fitting GAM/GAMLSS model categorical, code check unique combination categories remove cells category zero gene expression fitted gene.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the marginal models — fit_marginal","text":"list fitted regression models. length equal total feature number.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_marginal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit the marginal models — fit_marginal","text":"function takes result construct_data input, fit regression models feature based users' specification.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/fit_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the marginal models — fit_marginal","text":"","code":"data(example_sce)   my_data <- construct_data(   sce = example_sce,   assay_use = \"counts\",   celltype = \"cell_type\",   pseudotime = \"pseudotime\",   spatial = NULL,   other_covariates = NULL,   corr_by = \"1\"   )   my_marginal <- fit_marginal(   data = my_data,   mu_formula = \"s(pseudotime, bs = 'cr', k = 10)\",   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 1,   usebam = FALSE   )"},{"path":"https://feitony.github.io/scDesign3/reference/ga.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions from gamlss/gamlss.add with bugs fixed — ga","title":"Functions from gamlss/gamlss.add with bugs fixed — ga","text":"additive function used fitting GAMLSS models. interface gam() mgcv package.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions from gamlss/gamlss.add with bugs fixed — ga","text":"","code":"ga(formula, envir, control = ga.control(...), ...)"},{"path":"https://feitony.github.io/scDesign3/reference/ga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions from gamlss/gamlss.add with bugs fixed — ga","text":"formula formula model. envir environment. control control model fitting. ... arguments.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions from gamlss/gamlss.add with bugs fixed — ga","text":"xvar list.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ga.html","id":"ga","dir":"Reference","previous_headings":"","what":"ga","title":"Functions from gamlss/gamlss.add with bugs fixed — ga","text":"NA","code":""},{"path":"https://feitony.github.io/scDesign3/reference/ga.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions from gamlss/gamlss.add with bugs fixed — ga","text":"","code":"print(\"No example\") #> [1] \"No example\""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ba.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for Function ba() — gamlss.ba","title":"Support for Function ba() — gamlss.ba","text":"support  smoother functions ba() interfaces Simon Wood's bam() functions package mgcv. intended called directly users. gamlss.add::gamlss.ba.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for Function ba() — gamlss.ba","text":"","code":"gamlss.ba(x, y, w, xeval = NULL, ...)"},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for Function ba() — gamlss.ba","text":"x explanatory variables y Iterative y variable w Iterative weights xeval xeval=TRUE prediction used ... arguments","code":""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Support for Function ba() — gamlss.ba","text":"used","code":""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for Function ba() — gamlss.ba","text":"","code":"print(\"No example\") #> [1] \"No example\""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ga.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for Function ga() — gamlss.ga","title":"Support for Function ga() — gamlss.ga","text":"support  smoother functions ga() interfaces Simon Wood's gam() functions package mgcv. intended called directly users. gamlss.add::gamlss.ga.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for Function ga() — gamlss.ga","text":"","code":"gamlss.ga(x, y, w, xeval = NULL, ...)"},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for Function ga() — gamlss.ga","text":"x explanatory variables y Iterative y variable w Iterative weights xeval xeval=TRUE prediction used ... arguments","code":""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Support for Function ga() — gamlss.ga","text":"used","code":""},{"path":"https://feitony.github.io/scDesign3/reference/gamlss.ga.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for Function ga() — gamlss.ga","text":"","code":"print(\"No example\") #> [1] \"No example\""},{"path":"https://feitony.github.io/scDesign3/reference/perform_lrt.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the likelihood ratio test — perform_lrt","title":"Perform the likelihood ratio test — perform_lrt","text":"perform_lrt performs likelihood ratio test compare two list marginal models.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/perform_lrt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the likelihood ratio test — perform_lrt","text":"","code":"perform_lrt(alter_marginal, null_marginal)"},{"path":"https://feitony.github.io/scDesign3/reference/perform_lrt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the likelihood ratio test — perform_lrt","text":"alter_marginal list marginal models alternative hypothesis. null_marginal list marginal models null hypothesis. must strictly nested alternative model.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/perform_lrt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the likelihood ratio test — perform_lrt","text":"data.frame LRT result.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/perform_lrt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform the likelihood ratio test — perform_lrt","text":"function takes two lists marginal models (default, first list alternative second null) fit_marginal. Note LRT makes sense NESTED models. can quite tricky use penalized-splines (e.g., trajectory data).","code":""},{"path":"https://feitony.github.io/scDesign3/reference/perform_lrt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform the likelihood ratio test — perform_lrt","text":"","code":"data(example_sce) my_data <- construct_data( sce = example_sce, assay_use = \"counts\", celltype = \"cell_type\", pseudotime = \"pseudotime\", spatial = NULL, other_covariates = NULL, corr_by = \"cell_type\" )  my_data2 <- construct_data(   sce = example_sce,   assay_use = \"counts\",   celltype = \"cell_type\",   pseudotime = \"pseudotime\",   spatial = NULL,   other_covariates = NULL,   corr_by = \"pseudotime\",   ncell = 10000 )  my_marginal1 <- fit_marginal(   data = my_data,   mu_formula = \"1\",   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 1,   usebam = FALSE ) my_marginal2 <- fit_marginal(   data = my_data,   mu_formula = \"s(pseudotime, bs = 'cr', k = 10)\",   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 1,   usebam = FALSE ) my_fit1 <- lapply(my_marginal1, function(x)x$fit) my_fit2 <- lapply(my_marginal2, function(x)x$fit) my_pvalue <- perform_lrt(my_fit2, my_fit1)"},{"path":"https://feitony.github.io/scDesign3/reference/plot_reduceddim.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality reduction and visualization — plot_reduceddim","title":"Dimensionality reduction and visualization — plot_reduceddim","text":"plot_reduceddim performs dimensionality reduction","code":""},{"path":"https://feitony.github.io/scDesign3/reference/plot_reduceddim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality reduction and visualization — plot_reduceddim","text":"","code":"plot_reduceddim(   ref_sce,   sce_list,   name_vec,   assay_use = \"logcounts\",   pc_umap = TRUE,   n_pc = 50,   center = TRUE,   scale. = TRUE,   if_plot = TRUE,   shape_by = NULL,   color_by,   point_size = 1 )"},{"path":"https://feitony.github.io/scDesign3/reference/plot_reduceddim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality reduction and visualization — plot_reduceddim","text":"ref_sce reference sce. sce_list list synthetic sce. name_vec vector names dataset. length length(sce_list) + 1, first name ref_sce. assay_use string indicates assay use sce. Default 'logcounts'. pc_umap logic value whether using PCs input UMAP. Default TRUE. n_pc integer number PCs. center logic value whether centering data PCA. Default TRUE. scale. logic value whether scaling data PCA. Default TRUE. if_plot logic value whether returning plot. FALSE, return reduced dimensions dataset. shape_by string indicates column colData used shape. color_by string indicates column colData used color. point_size numeric value point size final plot. Default 1.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/plot_reduceddim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensionality reduction and visualization — plot_reduceddim","text":"ggplot data.frame reduced dimensions.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/plot_reduceddim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensionality reduction and visualization — plot_reduceddim","text":"function takes reference sce list new sces, performs dimensionality reduction reference data, projects synthetic datasets low dimensional space, visualize results.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/scdesign3.html","id":null,"dir":"Reference","previous_headings":"","what":"The wrapper for the whole scDesign3 pipeline — scdesign3","title":"The wrapper for the whole scDesign3 pipeline — scdesign3","text":"scdesign3 takes input data, fits model ","code":""},{"path":"https://feitony.github.io/scDesign3/reference/scdesign3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The wrapper for the whole scDesign3 pipeline — scdesign3","text":"","code":"scdesign3(   sce,   assay_use = \"counts\",   celltype,   pseudotime = NULL,   spatial = NULL,   other_covariates,   ncell = dim(sce)[2],   mu_formula,   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 2,   correlation_function = \"default\",   usebam = FALSE,   edf_flexible = FALSE,   corr_formula,   empirical_quantile = FALSE,   copula = \"gaussian\",   if_sparse = FALSE,   fastmvn = FALSE,   DT = TRUE,   pseudo_obs = FALSE,   family_set = c(\"gauss\", \"indep\"),   important_feature = \"all\",   nonnegative = TRUE,   nonzerovar = FALSE,   return_model = FALSE,   simplify = FALSE,   parallelization = \"mcmapply\",   BPPARAM = NULL,   trace = FALSE )"},{"path":"https://feitony.github.io/scDesign3/reference/scdesign3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The wrapper for the whole scDesign3 pipeline — scdesign3","text":"sce SingleCellExperiment object. assay_use string indicates assay use sce. Default 'counts'. celltype string name cell type variable colData sce. Default 'cell_type'. pseudotime string string vector name pseudotime (exist) multiple lineages. Default NULL. spatial length two string vector names spatial coordinates. Default NULL. other_covariates string string vector covariates want include data. ncell number cell want simulate. Default dim(sce)[2] (number input data). mu_formula string mu parameter formula sigma_formula string sigma parameter formula family_use string marginal distribution. Must one 'poisson', 'nb', 'zip', 'zinb' 'gaussian'. n_cores integer. number cores use. correlation_function string. 'default', function Rfast; 'coop', function coop, calls BLAS. usebam logic variable. use bam acceleration marginal fitting. edf_flexible logic variable. used accelerating spatial model k large 'mu_formula'. Default FALSE. corr_formula string correlation structure. empirical_quantile Please use clearly know happen! logic variable. TRUE, fit copula use EMPIRICAL CDF values original data; make simulated data fixed (randomness). Default FALSE. works ncell original data. copula string copula choice. Must one 'gaussian' 'vine'. Default 'gaussian'. Note vine copula may better modeling high-dimensions, can slow features >1000. if_sparse logic variable. works Gaussian copula (family_set = \"gaussian\"). TRUE, thresholding strategy make corr matrix sparse. fastmvn logical variable. TRUE, sampling multivariate Gaussian done mvnfast, otherwise mvtnorm. Default FALSE. matters Gaussian copula. DT logic variable. TRUE, perform distributional transformation make discrete data 'continuous'. useful discrete distributions (e.g., Poisson, NB). Default TRUE. Note continuous data (e.g., Gaussian), DT make sense set FALSE. pseudo_obs logic variable. TRUE, use empirical quantiles instead theoretical quantiles fitting copula. Default FALSE. family_set string string vector bivariate copula families. Default c(\"gauss\", \"indep\"). information please check package rvinecoplib. important_feature numeric value vector indicates whether gene used correlation estimation . numeric value, gene zero proportion greater value excluded form gene-gene correlation estimation. vector, logical vector length equal number genes sce. TRUE logical vector means corresponding gene included gene-gene correlation estimation FALSE logical vector means corresponding gene excluded gene-gene correlation estimation. default value \"\" (special string means filtering). nonnegative logical variable. TRUE, values < 0 synthetic data converted 0. Default TRUE (since expression matrix nonnegative). nonzerovar logical variable. TRUE, gene zero variance, cell replaced 1. designed avoiding potential errors, example, PCA. Default FALSE. return_model logic variable. TRUE, marginal models copula models returned. Default FALSE. simplify logic variable. TRUE, fitted regression model keep essential contains predict, otherwise fitted models can large. Default FALSE. parallelization string indicating specific parallelization function use. Must one 'mcmapply', 'bpmapply', 'pbmcmapply', corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value 'mcmapply'. BPPARAM MulticoreParam object NULL. parameter parallelization = 'mcmapply' 'pbmcmapply', parameter must NULL. parameter parallelization = 'bpmapply',  parameter must one MulticoreParam object offered package 'BiocParallel. default value NULL. trace logic variable. TRUE, warning/error log runtime gam/gamlss returned, FALSE otherwise. Default FALSE.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/scdesign3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The wrapper for the whole scDesign3 pipeline — scdesign3","text":"list components: new_count matrix new simulated count (expression) matrix. new_covariate data.frame new covariate matrix. model_aic model AIC. marginal_list list marginal regression models return_model = TRUE. corr_list list correlation models (conditional copulas) return_model = TRUE.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/scdesign3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The wrapper for the whole scDesign3 pipeline — scdesign3","text":"","code":"data(example_sce) my_simu <- scdesign3( sce = example_sce, assay_use = \"counts\", celltype = \"cell_type\", pseudotime = \"pseudotime\", spatial = NULL, other_covariates = NULL, mu_formula = \"s(pseudotime, bs = 'cr', k = 10)\", sigma_formula = \"1\", family_use = \"nb\", n_cores = 2, usebam = FALSE, edf_flexible = FALSE, corr_formula = \"pseudotime\", copula = \"gaussian\", if_sparse = TRUE, DT = TRUE, pseudo_obs = FALSE, ncell = 1000, return_model = FALSE ) #> Input Data Construction Start #> Input Data Construction End #> Start Marginal Fitting #> Marginal Fitting End #> Start Copula Fitting #> Convert Residuals to Multivariate Gaussian #> Converting End #> Copula group 1 starts #> Copula group 2 starts #> Copula group 3 starts #> Copula group 4 starts #> Copula Fitting End #> Start Parameter Extraction #> Parameter #> Extraction End #> Start Generate New Data #> Use Copula to sample a multivariate quantile matrix #> Sample Copula group 1 starts #> Sample Copula group 2 starts #> Sample Copula group 3 starts #> Sample Copula group 4 starts #> New Data Generating End"},{"path":"https://feitony.github.io/scDesign3/reference/simu_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate new data — simu_new","title":"Simulate new data — simu_new","text":"simu_new generates new simulated data based fitted marginal copula models.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/simu_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate new data — simu_new","text":"","code":"simu_new(   sce,   assay_use = \"counts\",   mean_mat,   sigma_mat,   zero_mat,   quantile_mat = NULL,   copula_list,   n_cores,   fastmvn = FALSE,   family_use,   nonnegative = TRUE,   nonzerovar = FALSE,   input_data,   new_covariate,   important_feature = \"all\",   parallelization = \"mcmapply\",   BPPARAM = NULL,   filtered_gene )"},{"path":"https://feitony.github.io/scDesign3/reference/simu_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate new data — simu_new","text":"sce SingleCellExperiment object. assay_use string indicates assay use sce. Default 'counts'. mean_mat cell feature matrix mean parameter. sigma_mat cell feature matrix sigma parameter. zero_mat cell feature matrix zero-inflation parameter. quantile_mat cell feature matrix multivariate quantile. copula_list list copulas generating multivariate quantile matrix. provided, quantile_mat must NULL. n_cores integer. number cores use. fastmvn logical variable. TRUE, sampling multivariate Gaussian done mvnfast, otherwise mvtnorm. Default FALSE. family_use string marginal distribution. Must one 'poisson', \"binomial\", 'nb', 'zip', 'zinb' 'gaussian'. nonnegative logical variable. TRUE, values < 0 synthetic data converted 0. Default TRUE (since expression matrix nonnegative). nonzerovar logical variable. TRUE, gene zero variance, cell replaced 1. designed avoiding potential errors, example, PCA. input_data input count matrix. new_covariate data.frame contains covariates targeted simulated data  construct_data. important_feature important_feature string vector indicates whether gene used correlation estimation . string, string must either \"\" (using genes) \"auto\", indicates genes automatically selected based proportion zero expression across cells gene. Gene zero proportion greater 0.8 excluded form gene-gene correlation estimation. vector, logical vector length equal number genes sce. TRUE logical vector means corresponding gene included gene-gene correlation estimation FALSE logical vector means corresponding gene excluded gene-gene correlation estimation. default value \"\". parallelization string indicating specific parallelization function use. Must one 'mcmapply', 'bpmapply', 'pbmcmapply', corresponds parallelization function package parallel,BiocParallel, pbmcapply respectively. default value 'mcmapply'. BPPARAM MulticoreParam object NULL. parameter parallelization = 'mcmapply' 'pbmcmapply', parameter must NULL. parameter parallelization = 'bpmapply',  parameter must one MulticoreParam object offered package 'BiocParallel. default value NULL. filtered_gene vector NULL contains genes excluded marginal copula fitting steps genes express less two cells. can obtain  construct_data","code":""},{"path":"https://feitony.github.io/scDesign3/reference/simu_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate new data — simu_new","text":"feature cell matrix new simulated count (expression) matrix sparse matrix.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/simu_new.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate new data — simu_new","text":"function takes new covariate (use) construct_data, parameter matrices extract_para multivariate Unifs fit_copula.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/simu_new.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate new data — simu_new","text":"","code":"data(example_sce)   my_data <- construct_data(   sce = example_sce,   assay_use = \"counts\",   celltype = \"cell_type\",   pseudotime = \"pseudotime\",   spatial = NULL,   other_covariates = NULL,   corr_by = \"1\"   )   my_marginal <- fit_marginal(   data = my_data,   mu_formula = \"s(pseudotime, bs = 'cr', k = 10)\",   sigma_formula = \"1\",   family_use = \"nb\",   n_cores = 1,   usebam = FALSE   )   my_copula <- fit_copula(   sce = example_sce,   assay_use = \"counts\",   marginal_list = my_marginal,   family_use = c(rep(\"nb\", 5), rep(\"zip\", 5)),   copula = \"vine\",   n_cores = 1,   input_data = my_data$dat   ) #> Convert Residuals to Uniform #> Converting End #> Copula group 1 starts #> Vine Copula Estimation Starts #> Time difference of 0.1341245 secs #> Vine Copula Estimation Ends   my_para <- extract_para(     sce = example_sce,     marginal_list = my_marginal,     n_cores = 1,     family_use = c(rep(\"nb\", 5), rep(\"zip\", 5)),     new_covariate = my_data$new_covariate,     data = my_data$dat   )   my_newcount <- simu_new(   sce = example_sce,   mean_mat = my_para$mean_mat,   sigma_mat = my_para$sigma_mat,   zero_mat = my_para$zero_mat,   quantile_mat = NULL,   copula_list = my_copula$copula_list,   n_cores = 1,   family_use = c(rep(\"nb\", 5), rep(\"zip\", 5)),   input_data = my_data$dat,   new_covariate = my_data$new_covariate,   important_feature = my_copula$important_feature,   filtered_gene = my_data$filtered_gene   ) #> Use Copula to sample a multivariate quantile matrix #> Sample Copula group 1 starts"},{"path":"https://feitony.github.io/scDesign3/reference/sparse_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"This function computes the thresholding sparse covariance/correlation estimator with the optimal threshold level. — sparse_cov","title":"This function computes the thresholding sparse covariance/correlation estimator with the optimal threshold level. — sparse_cov","text":"Part Chenxin Jiang","code":""},{"path":"https://feitony.github.io/scDesign3/reference/sparse_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function computes the thresholding sparse covariance/correlation estimator with the optimal threshold level. — sparse_cov","text":"","code":"sparse_cov(   data,   method = c(\"cv\", \"qiu\"),   operator = c(\"hard\", \"soft\", \"scad\", \"al\"),   corr = TRUE )"},{"path":"https://feitony.github.io/scDesign3/reference/sparse_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function computes the thresholding sparse covariance/correlation estimator with the optimal threshold level. — sparse_cov","text":"data data matrix. method choice method select optimal threshold level. operator choice thresholding operator. corr indicator computing correlation covariance matrix.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/sparse_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function computes the thresholding sparse covariance/correlation estimator with the optimal threshold level. — sparse_cov","text":"thresholding sparse covariance/correlation estimator.","code":""},{"path":"https://feitony.github.io/scDesign3/reference/sparse_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function computes the thresholding sparse covariance/correlation estimator with the optimal threshold level. — sparse_cov","text":"","code":"print(\"No example\") #> [1] \"No example\""}]
